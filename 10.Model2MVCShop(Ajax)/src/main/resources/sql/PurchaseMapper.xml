<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	
	<resultMap id="purchaseSelectMap" type="purchase">
		<result property="tranNo" 			column="tran_no" 			jdbcType="NUMERIC"/>
		<result property="prodNo"			column="prod_no" 			jdbcType="NUMERIC" />
		<result property="buyer.userId" 	column="buyer_id" 			jdbcType="VARCHAR" />
		<result property="buyer.userId" 	column="user_id" 			jdbcType="VARCHAR" />
		<result property="paymentOption"	column="payment_option" 	jdbcType="CHAR" />
		<result property="receiverName"		column="receiver_name"		jdbcType="VARCHAR" />
		<result property="receiverPhone" 	column="receiver_phone" 	jdbcType="VARCHAR" />
		<result property="divyAddr"			column="demailaddr" 		jdbcType="VARCHAR" />
		<result property="divyRequest"		column="dlvy_request" 		jdbcType="VARCHAR" />
		<result property="tranCode"			column="tran_status_code"	jdbcType="VARCHAR" />
		<result property="orderDate"		column="order_data" 		jdbcType="DATE" />
		<result property="divyDate"			column="dlvy_date" 			jdbcType="DATE" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addPurchase"		parameterType="purchase" >
	 	INSERT
		INTO transaction(tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
						demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date) 
		VALUES	 (seq_transaction_tran_no.nextval, #{prodNo}, #{buyer.userId}, #{paymentOption}, 
				#{receiverName}, #{receiverPhone}, #{divyAddr}, #{divyRequest}, '1', SYSDATE, #{divyDate} )
				
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getPurchase"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT
		tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
		demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date 		
		FROM transaction 
		WHERE tran_no = #{value}
	 </select>
	 
	 <select 	id="getPurchase2"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT
		tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
		demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date 		
		FROM transaction 
		WHERE prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	   		payment_option 	= #{paymentOption} ,
			receiver_name	= #{receiverName},
			receiver_phone = #{receiverPhone} ,
			demailaddr	= #{divyAddr},
			dlvy_request = #{divyRequest},
			dlvy_date = #{divyDate}
	   	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateTranCode"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	   		<if test="tranCode==1">
	   			tran_status_code = 2
	   		</if>
	   		<if test="tranCode==2">
	   			tran_status_code = 3
	   		</if>
	   	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="map"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.*, ROWNUM AS row_seq
	  					FROM		(	SELECT u.user_id, t.prod_no, t.tran_no, t.receiver_name, t.receiver_phone, t.tran_status_code
										FROM users u, transaction t
										WHERE u.user_id = t.buyer_id AND 
										t.buyer_id = #{buyerId}
										<if test="search.searchCondition != null">
													<if test="search.searchCondition == 0 and search.searchKeyword !='' ">
										 				AND t.tran_no = #{search.searchKeyword}
													</if>
													<if test="search.searchCondition == 1 and search.searchKeyword !='' ">
										 				AND t.prod_no = #{search.searchKeyword}
													</if>
												</if>
											ORDER BY t.tran_no ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 
	 <select  id="getSaleList"  parameterType="map"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT user_id, tran_no, receiver_name, receiver_phone, tran_status_code
											FROM users, transaction
											WHERE user_id = buyer_id
											<if test="search.searchCondition != null">
													<if test="search.searchCondition == 0 and search.searchKeyword !='' ">
										 				AND p.prod_no = #{search.searchKeyword}
													</if>
													<if test="search.searchCondition == 1 and search.searchKeyword !='' ">
										 				AND p.prod_name = #{search.searchKeyword}
													</if>
											</if>
											ORDER BY order_data ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 
	 
	 
	 
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )-->
		
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="String"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
				demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date
						FROM transaction
						<if test='value != null and value != ""'>
						WHERE buyer_id = '${value}' 
						</if>
						) countTable						
	 </select>
</mapper>